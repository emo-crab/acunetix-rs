/*
 * Acunetix12 client api
 *
 * Acunetix12 client api [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ScanDetailCurrentSession {
    #[serde(rename = "event_level", skip_serializing_if = "Option::is_none")]
    pub event_level: Option<i64>,
    #[serde(rename = "progress", skip_serializing_if = "Option::is_none")]
    pub progress: Option<i64>,
    #[serde(rename = "scan_session_id", skip_serializing_if = "Option::is_none")]
    pub scan_session_id: Option<String>,
    #[serde(rename = "start_date", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    #[serde(rename = "threat", skip_serializing_if = "Option::is_none")]
    pub threat: Option<i64>,
}

impl ScanDetailCurrentSession {
    pub fn new() -> ScanDetailCurrentSession {
        ScanDetailCurrentSession {
            event_level: None,
            progress: None,
            scan_session_id: None,
            start_date: None,
            status: None,
            threat: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "scheduled")]
    Scheduled,
    #[serde(rename = "queued")]
    Queued,
    #[serde(rename = "starting")]
    Starting,
    #[serde(rename = "processing")]
    Processing,
    #[serde(rename = "aborting")]
    Aborting,
    #[serde(rename = "aborted")]
    Aborted,
    #[serde(rename = "pausing")]
    Pausing,
    #[serde(rename = "paused")]
    Paused,
    #[serde(rename = "completed")]
    Completed,
    #[serde(rename = "failed")]
    Failed,
}

impl Default for Status {
    fn default() -> Status {
        Self::Scheduled
    }
}

