/*
 * Acunetix12 client api
 *
 * Acunetix12 client api [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ScanAppWvs {
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(rename = "abort_requested", skip_serializing_if = "Option::is_none")]
    pub abort_requested: Option<bool>,
    #[serde(rename = "start_date", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<String>,
    #[serde(rename = "end_date", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<String>,
    #[serde(rename = "end_deadline", skip_serializing_if = "Option::is_none")]
    pub end_deadline: Option<String>,
    #[serde(rename = "event_level", skip_serializing_if = "Option::is_none")]
    pub event_level: Option<String>,
    /// key is target uuid
    #[serde(rename = "hosts", skip_serializing_if = "Option::is_none")]
    pub hosts: Option<::std::collections::HashMap<String, crate::models::ScanAppHost>>,
    #[serde(rename = "main", skip_serializing_if = "Option::is_none")]
    pub main: Option<Box<crate::models::ScanAppWvsMain>>,
}

impl ScanAppWvs {
    pub fn new() -> ScanAppWvs {
        ScanAppWvs {
            status: None,
            abort_requested: None,
            start_date: None,
            end_date: None,
            end_deadline: None,
            event_level: None,
            hosts: None,
            main: None,
        }
    }
}


